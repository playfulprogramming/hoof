name: unicorn-utterances-cms

services:
  pgsql:
    image: postgres:16.3-alpine3.18
    env_file:
      - .env
    volumes:
      - pgsql_storage:/var/lib/postgresql/data
      - pgsql_backups:/backups
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    volumes:
      - redis_storage:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    ports:
      - "9000:9000" # API Port
      - "9001:9001" # Web UI Port
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: ${S3_KEY_ID}
      MINIO_ROOT_PASSWORD: ${S3_KEY_SECRET}
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    env_file:
      - .env
    environment:
      S3_ENDPOINT: http://minio:9000
      POSTGRES_URL: postgresql://postgres:unicorn@pgsql:5432/postgres
      REDIS_URL: redis://redis:6379
    ports:
      - "3000:3000"
    depends_on: [pgsql, redis, minio]
    profiles: [app]
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    develop:
      watch:
        - path: .
          action: rebuild
    post_start:
      - command: node --experimental-strip-types packages/db/src/migrate.ts

volumes:
  pgsql_storage: {}
  pgsql_backups: {}
  redis_storage: {}
  minio_storage: {}
